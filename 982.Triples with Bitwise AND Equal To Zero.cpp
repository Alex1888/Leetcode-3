题意：判断给出的数字位计算中有几个的结果等于0
思路：DP，记忆化枚举
1.因为需要判断每一位上面的结果，给出的数值范围是0 <= A[i] < 2^16，那么建立一个16位的数组，用1<<16直接向左移动16位即可。初始化位-1
2.因为一共三个变量，先循环前两个，记录下&的值，如果在数组中没有这一项的记录，那么这一项为0，求出前两位与第三位的&的结果
如果等于0，那么结果计数器+1
3.当内部循环结束以后，在数组中更新这一项的值，即&为0的个数。
4.后面对于前两位的计算，如果遇到&在数组中的结果不等于-1的时候，那么结果值直接加上数组中的值
因为数组中有值表示前两位的&与第三位&后为0，那么表示又遇到了相同的前两位的值，新的第三位的值&运算之后等于0的个数与之前的相等。
5.最后返回结果计数器的值
class Solution {
public:
    int countTriplets(vector<int>& A) {
        int ret = 0;
        vector<int>vec(1<< 16, -1);
        for(int i= 0 ; i < A.size();++i){
            for(int j = 0; j < A.size(); ++j){
                int temp = A[i] & A[j];
                if(vec[temp] == -1){
                    vec[temp] = 0;
                    for(int k = 0; k < A.size();++k){
                        if((temp & A[k]) == 0) ++vec[temp];
                    }
                }
                ret += vec[temp];
            }
        }
        return ret;
    }
};